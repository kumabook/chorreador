#!/usr/bin/env node
'use strict';

const fs         = require('fs');
const path       = require('path');
const chorreador = require('../');
const yargs      = require('yargs');

let argv      = yargs.usage('Usage: chorreador server|instrument ...').demand(1).argv;
const command = argv._[0];
switch(command) {
case 'server':
  argv = yargs.usage('Usage: chorreador server --port NUM --dir DIR').
               default('port', 3000).
               default('dir', 'instrumented').
               argv;
  var server = new chorreador.Server(argv.port, argv.dir);
  server.run();
  break;
case 'instrument':
    const usage = 'Usage: chorreador instrument FILE --include_def';
    argv = yargs.usage(usage).
                 demand(1).
                 boolean(['include_def']).
                 argv;

  const fileName     = argv._[1];
  const Instrumentor = chorreador.Instrumentor;
  const tracer       = new chorreador.ConsoleTracer();
  const ext          = path.extname(fileName);

  fs.readFile(fileName, (err, code) => {
    switch(ext) {
    case '.js':
      const source       = new chorreador.Source(fileName, code.toString());
      let instrumented   = Instrumentor.instrumentFunctionTrace(source, tracer);
      console.log(instrumented);
      if(argv.include_def) {
        source.code  = code;
        instrumented = Instrumentor.instrumentFunctionTraceDefinition(source,
                                                                     tracer);
        console.log(instrumented);
      }
      break;
    case '.html':
      var page    = new chorreador.Page('', fileName, code.toString()),
          profile = new chorreador.Profile(page),
          code    = Instrumentor.instrumentFunctionTraceDefinition2Page(page,
                                                                        profile,
                                                                        tracer);
      console.log(code);
    }

  });
};
